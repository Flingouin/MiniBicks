// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniBicks.EntityFramework;

namespace MiniBicks.DataContext.Migrations
{
    [DbContext(typeof(MiniBicksContext))]
    [Migration("20191119133807_CorrectifRue")]
    partial class CorrectifRue
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0-preview3.19554.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MiniBicks.Entities.Adresse", b =>
                {
                    b.Property<Guid>("ID_Adresse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CodePostal")
                        .HasColumnType("int");

                    b.Property<int>("NumeroRue")
                        .HasColumnType("int");

                    b.Property<int>("PaysEnum")
                        .HasColumnType("int");

                    b.Property<string>("Rue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ville")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Adresse");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("MiniBicks.Entities.Conge", b =>
                {
                    b.Property<Guid>("ID_Conge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstValide")
                        .HasColumnType("bit");

                    b.Property<int>("TypeCongeEnum")
                        .HasColumnType("int");

                    b.HasKey("ID_Conge");

                    b.ToTable("Conges");
                });

            modelBuilder.Entity("MiniBicks.Entities.User", b =>
                {
                    b.Property<Guid>("ID_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdresseID_Adresse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ResponsableID_User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RoleEnum")
                        .HasColumnType("int");

                    b.HasKey("ID_User");

                    b.HasIndex("AdresseID_Adresse");

                    b.HasIndex("ResponsableID_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MiniBicks.Entities.User", b =>
                {
                    b.HasOne("MiniBicks.Entities.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseID_Adresse");

                    b.HasOne("MiniBicks.Entities.User", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableID_User");
                });
#pragma warning restore 612, 618
        }
    }
}
