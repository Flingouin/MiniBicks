@page
@model MiniBicks.Pages.Conge.ValideOrRefuseCongeModel
@using MiniBicks.Entities.Enum;
@using System.Linq;
@{
    ViewData["Title"] = "ValideOrRefuseConge";
    double DureeRestant = Math.Round(Model.ListeDureeConge.Where(dc => dc.TypeCongeEnum == Model.Conge.TypeCongeEnum).FirstOrDefault().Duree - Model.Conge.User.ListeConge.Where(c => c.TypeCongeEnum == Model.Conge.TypeCongeEnum && c.CongeValiditeEnum == CongeValiditeEnum.Valide).Sum(c => (c.DateFin - c.DateDebut).TotalDays), MidpointRounding.AwayFromZero);
    double DureeRestantApresValidation = Math.Round(Model.ListeDureeConge.Where(dc => dc.TypeCongeEnum == Model.Conge.TypeCongeEnum).FirstOrDefault().Duree - Model.Conge.DureeDuConge, MidpointRounding.AwayFromZero);
    List<string> ListEnumCongeValidite = Enum.GetNames(typeof(CongeValiditeEnum)).ToList();
}

<h2>Validation du congé</h2>

<form method="post">
    <input asp-for="Conge.ID_User" type="hidden" />
    <input asp-for="Conge.ID_Conge" type="hidden" />
    <input asp-for="Conge.DateDebut" type="hidden" />
    <input asp-for="Conge.DateFin" type="hidden" />
    <input asp-for="Conge.TypeCongeEnum" type="hidden" />

    <p>Date de début @Model.Conge.DateDebut.ToShortDateString()</p>
    <p>Date de fin @Model.Conge.DateFin.ToShortDateString()</p>
    <p>Type de congé @Model.Conge.TypeCongeEnum</p>
    <br />
    <label asp-for="Conge.CongeValiditeEnum"></label>
    <select asp-for="Conge.CongeValiditeEnum" asp-items="ListEnumCongeValidite.Select(lecv => new SelectListItem() { Text = lecv, Value = lecv, Disabled = (lecv==nameof(CongeValiditeEnum.Valide) && (DureeRestant <= 0 || DureeRestantApresValidation <= 0))})">
    </select>

    <input type="submit" value="Enregistrer"><br />
    @if (DureeRestant <= 0 || DureeRestantApresValidation <= 0)
    {
        <small>/!\ Validation impossible, solde insuffisant</small>
    }

</form>

